[
{
	"uri": "https://oscarvillena.github.io/practicaservidor/practica/arquictectura/",
	"title": "Arquitectura",
	"tags": [],
	"description": "",
	"content": "Arquitecturas -XAMPP: Es un paquete de software libre que consiste en la gestion de bases de datos MySQL, el servidor Web Apache y los intérpretes para lenguajes de script: PHP y Perl. -WAMPP: Es un stack o conjunto de soluciones de software que significa que cuando instalas, estás instalando Apache, MySQL y PHP. -LAMPP: Es un cojunto de subsistemas de software necesarios para alcanzar una solucion global, en este caso configurar sitios web o servidores dinamicos con esfuerzo reducido. -MEAN: La arquitectura MEAN pone en juego a cuatro actores: el SGBD MongoDB, el framework Express, el framework Angular y un servidor Node.js. Esta arquitectura permite desacoplar la parte cliente, acceder a los datos de manera reactiva, crear páginas web de manera modular y reutilizable y por ultimo homogenizar el desarrollo alrededor del lenguaje JavaScript y de su extension TypeScript. -LEMP: Es un servidor basado en Linux y que cuenta con una serie de aplicaciones y configuraciones especialmente diseñadas para alojar páginas web (estáticas y dinámicas) con el mayor rendimiento posible. -AMPPS: Es un programa gratis para Windows, macOS y Linux que instala un potente y completo servidor web (WAMP/MAMP/LAMP) en cualquier ordenador, que incluye Apache, MySQL, MongoDB, PHP, Perl y Python. -Bitnami Es una biblioteca de instaladores o paquetes de software para aplicaciones web y pilas de software, así como dispositivos virtuales. "
},
{
	"uri": "https://oscarvillena.github.io/practicaservidor/practica/servidor/",
	"title": "Cliente/Servidor",
	"tags": [],
	"description": "",
	"content": "Comunicacion Cliente y Servidor Este modelo es uno de los principales usados en muchísimos servicios y protocolos de Internet, por lo que para todos aquellos que quieren aprender más sobre la web y cómo funciona, entender el concepto de modelo cliente servidor se vuelve algo indispensable. graph LR; A[Servidor] --|Comunica| B(Internet) B -- C{Envía} C --|1| D[Cliente] C --|2| E[Cliente]  -Importancia del modelo cliente servidor: La arquitectura cliente servidor tiene dos partes claramente diferenciadas, por un lado la parte del servidor y por otro la parte de cliente o grupo de clientes donde lo habitual es que un servidor sea una máquina bastante potente con un hardware y software específico que actúa de depósito de datos y funcione como un sistema gestor de base de datos o aplicaciones. En esta arquitectura el cliente suele ser estaciones de trabajo que solicitan varios servicios al servidor, mientras que un servidor es una máquina que actúa como depósito de datos y funciona como un sistema gestor de base de datos, este se encarga de dar la respuesta demandada por el cliente. -Componentes: -Red: Una red es un conjunto de clientes, servidores y base de datos unidos de una manera física o no física en el que existen protocolos de transmisión de información establecidos. -Cliente: El concepto de cliente hace referencia a un demandante de servicios, este cliente puede ser un ordenador como también una aplicación de informática, la cual requiere información proveniente de la red para funcionar. -Servidor: Un servidor hace referencia a un proveedor de servicios, este servidor a su vez puede ser un ordenador o una aplicación informática la cual envía información a los demás agentes de la red. -Protocolo: Un protocolo es un conjunto de normas o reglas y pasos establecidos de manera clara y concreta sobre el flujo de información en una red estructurada. -Servicios: Un servicio es un conjunto de información que busca responder las necesidades de un cliente, donde esta información pueden ser mail, música, mensajes simples entre software, videos, etc. -Base de datos: Son bancos de información ordenada, categorizada y clasificada que forman parte de la red, que son sitios de almacenaje para la utilización de los servidores y también directamente de los clientes. -Diferencia entre cliente y servidor: El cliente es un computador pequeño con una estructura al igual a la que tenemos en nuestras oficinas u hogares la cual accede a un servidor o a los servicios del mismo a través de Internet o una red interna. El servidor al igual que el cliente, es una computadora pero con diferencia de que tiene una gran capacidad que le permite almacenar gran cantidad de diversos de archivos, o correr varias aplicaciones en simultaneo para así nosotros los clientes poder acceder los servicios. -Tipos de arquitecturas cliente servidor: Existen diferentes tipos de arquictectura de clinte servidor que son: Arquitectura de dos capas. Arquictectura de tres capas. Arquitectura de N capas. -Ejemplos: Existen muchísimos servicios, protocolos y servidores que trabajan con el mismo modelo que mencionamos antes. Casi todo el Internet funciona de esa forma de hecho. Son navegar por una web, protocolo ftp, ssh, juegos en red o sistema de correo. "
},
{
	"uri": "https://oscarvillena.github.io/practicaservidor/practica/herramientas1/",
	"title": "Herramientas",
	"tags": [],
	"description": "",
	"content": "Herramientas -Babel WebPack Prototype Polyfill: Babel es un transcodificador ampliamente utilizado que puede convertir el código ES6 en código ES5, que se puede ejecutar en el entorno existente, por lo que podemos escribir en ES6 sin considerar el tema del soporte ambiental. BABEL\n-PHP Frameworks: Un framework PHP es una plataforma para crear aplicaciones web PHP. Los frameworks de PHP proporcionan bibliotecas de código para funciones de uso común, reduciendo la cantidad de código original que necesitas escribir. Php Framework\n-JSP: JavaServer Pages es una tecnología que ayuda a los desarrolladores de software a crear páginas web dinámicas basadas en HTML y XML, entre otros tipos de documentos. JSP es similar a PHP, pero usa el lenguaje de programación Java. JSP\n-CSS: Es un lenguaje de diseño gráfico para definir y crear la presentación de un documento estructurado escrito en un lenguaje de marcado.​ CSS\n-Bootstrap: Bootstrap es una biblioteca multiplataforma o conjunto de herramientas de código abierto para diseño de sitios y aplicaciones web. BOOTSTRAP\n-Vue: Es un framework de JavaScript de código abierto para la construcción de interfaces de usuario y aplicaciones de una sola página. VUE\n-Django: Es un framework de desarrollo web de código abierto, escrito en Python, que respeta el patrón de diseño conocido como modelo–vista–controlador. DJANGO\n-React: Es una biblioteca Javascript de código abierto diseñada para crear interfaces de usuario con el objetivo de facilitar el desarrollo de aplicaciones en una sola página. Es mantenido por Facebook y la comunidad de software libre. En el proyecto hay más de mil desarrolladores libres. REACT\n-Angular: Es un framework para aplicaciones web desarrollado en TypeScript, de código abierto, mantenido por Google, que se utiliza para crear y mantener aplicaciones web de una sola página. ANGULAR\n-JavaScript: Es un lenguaje de programación interpretado, dialecto del estándar ECMAScript. Se define como orientado a objetos, ​ basado en prototipos, imperativo, débilmente tipado y dinámico. JAVASCRIPT\n-TypeScript: Es un lenguaje de programación libre y de código abierto desarrollado y mantenido por Microsoft. Es un superconjunto de JavaScript, que esencialmente añade tipos estáticos y objetos basados en clases. TYPESCRIPT\n-JQuery: Es una biblioteca multiplataforma de JavaScript, permite simplificar la manera de interractuar con los documentos HTML. JQuery\n-Gatsby: Es un framework para aplicaciones web desarrollo sirve para preconfigurar la construccion de tu sitio web. GATSBY\n-Hugo: Es un framework para creacion de sitios web de proposito general. Se ubica en la categoria de los nuevos generadores de sitios web estaticos. HUGO\n-Jekyll: Es un generador simple para sitios web estáticos con capacidades de blog; adecuado para sitios web personales, de proyecto o de organizaciones. JEKYLL\n-Pelican: Es un generador de sitios web estaticos parecido a hugo el cual tambien hace el uso del lenguaje Markdown. PELICAN\n-Scraping: Es una tecnica utilizada mediante programas de software para extraer informacion de sitios web. Estos programas simulan la navegacion del ser humano. SCRAPING\n-Heroku: Es una plataforma como servicio de computacion en la nube que soporta distintos lenguajes de programcion. Este es propiedad de Salesforce. HEROKU\n-VuePress: Es otro generador de sitios estaticos tambien muy parecido a hugo y los demas dichos con anterioridad. VUEPRESS\nC++ Es un lenguaje de programación que proviene de la extensión del lenguaje C para que pudiese manipular objetos. C++\nPhyton Es un lenguaje de programación interpretado cuya filosofía hace hincapié en la legibilidad de su código. PHYTON\n"
},
{
	"uri": "https://oscarvillena.github.io/practicaservidor/",
	"title": "Principal",
	"tags": [],
	"description": "",
	"content": "-Practica: En esta pagina estatica se presenta la primera practica de Desarrollo web en entorno servidor. "
},
{
	"uri": "https://oscarvillena.github.io/practicaservidor/practica/",
	"title": "Practicas",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://oscarvillena.github.io/practicaservidor/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://oscarvillena.github.io/practicaservidor/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]